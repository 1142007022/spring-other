<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.TicketOutLogMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.entitys.TicketOutLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="start_num" jdbcType="VARCHAR" property="startNum" />
    <result column="end_num" jdbcType="VARCHAR" property="endNum" />
    <result column="total_num" jdbcType="INTEGER" property="totalNum" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="toatl_price" jdbcType="DECIMAL" property="toatlPrice" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="ticketoffice_id" jdbcType="INTEGER" property="ticketofficeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="out_account_name" jdbcType="VARCHAR" property="outAccountName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, start_num, end_num, total_num, price, toatl_price, pay_type, ticketoffice_id, 
    create_time, out_account_name
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.entitys.TicketOutLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_out_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket_out_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket_out_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.entitys.TicketOutLogExample">
    delete from ticket_out_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.entitys.TicketOutLog">
    insert into ticket_out_log (id, start_num, end_num, 
      total_num, price, toatl_price, 
      pay_type, ticketoffice_id, create_time, 
      out_account_name)
    values (#{id,jdbcType=INTEGER}, #{startNum,jdbcType=VARCHAR}, #{endNum,jdbcType=VARCHAR}, 
      #{totalNum,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{toatlPrice,jdbcType=DECIMAL}, 
      #{payType,jdbcType=VARCHAR}, #{ticketofficeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{outAccountName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.entitys.TicketOutLog">
    insert into ticket_out_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="startNum != null">
        start_num,
      </if>
      <if test="endNum != null">
        end_num,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="toatlPrice != null">
        toatl_price,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="ticketofficeId != null">
        ticketoffice_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="outAccountName != null">
        out_account_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startNum != null">
        #{startNum,jdbcType=VARCHAR},
      </if>
      <if test="endNum != null">
        #{endNum,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="toatlPrice != null">
        #{toatlPrice,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="ticketofficeId != null">
        #{ticketofficeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outAccountName != null">
        #{outAccountName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.entitys.TicketOutLogExample" resultType="java.lang.Long">
    select count(*) from ticket_out_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket_out_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.startNum != null">
        start_num = #{record.startNum,jdbcType=VARCHAR},
      </if>
      <if test="record.endNum != null">
        end_num = #{record.endNum,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNum != null">
        total_num = #{record.totalNum,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.toatlPrice != null">
        toatl_price = #{record.toatlPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketofficeId != null">
        ticketoffice_id = #{record.ticketofficeId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outAccountName != null">
        out_account_name = #{record.outAccountName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket_out_log
    set id = #{record.id,jdbcType=INTEGER},
      start_num = #{record.startNum,jdbcType=VARCHAR},
      end_num = #{record.endNum,jdbcType=VARCHAR},
      total_num = #{record.totalNum,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      toatl_price = #{record.toatlPrice,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      ticketoffice_id = #{record.ticketofficeId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      out_account_name = #{record.outAccountName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.entitys.TicketOutLog">
    update ticket_out_log
    <set>
      <if test="startNum != null">
        start_num = #{startNum,jdbcType=VARCHAR},
      </if>
      <if test="endNum != null">
        end_num = #{endNum,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null">
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="toatlPrice != null">
        toatl_price = #{toatlPrice,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="ticketofficeId != null">
        ticketoffice_id = #{ticketofficeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outAccountName != null">
        out_account_name = #{outAccountName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.entitys.TicketOutLog">
    update ticket_out_log
    set start_num = #{startNum,jdbcType=VARCHAR},
      end_num = #{endNum,jdbcType=VARCHAR},
      total_num = #{totalNum,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      toatl_price = #{toatlPrice,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=VARCHAR},
      ticketoffice_id = #{ticketofficeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      out_account_name = #{outAccountName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>